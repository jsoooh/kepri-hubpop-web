heat_template_version: '2018-08-31'

description: single rabbitmq template

parameters:
  api_end_point:
    type: string
  image:
    type: string
    default: CentOS76-Rabbitmq.raw
  flavor_volume_size:
    type: string
  flavor:
    type: string
  availability_zone:
    type: string
  key_name:
    type: string
  security_group:
    type: string
  provider_net:
    type: string
  provider_subnet:
    type: string
  epmd_port:
    type: string
    default: 4369
  erlang_port:
    type: string
    default: 25672
  amqp_port:
    type: string
    default: 5672
  management_port:
    type: string
    default: 15672
  admin_password:
    type: string

resources:

  server_port:
    type: OS::Neutron::Port
    properties:
      fixed_ips: [{ subnet_id: { get_param: provider_subnet } }]
      network: { get_param: provider_net }
      security_groups: [{ get_param: security_group }]

  init_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          params:
            $api_end_point: { get_param: api_end_point }
            $project_id: { get_param: 'OS::project_id' }
            $stack_id: { get_param: 'OS::stack_id' }
            $stack_name: { get_param: 'OS::stack_name' }
            $epmd_port: { get_param: epmd_port }
            $erlang_port: { get_param: erlang_port }
            $amqp_port: { get_param: amqp_port }
            $management_port: { get_param: management_port }
            $admin_password: { get_param: admin_password }
          template: |
            #!/bin/sh
            echo "rabbitmq setting start"
            curl -X PUT -H "Content-Type: application/json" --connect-timeout 10 --data "{\"deployStatus\": \"DEPLOY_IN_PROGRESS\"}" $api_end_point/vm_catalog/external/$project_id/deploy/$stack_name/$stack_id/status
            systemctl start rabbitmq-server
            rabbitmq-plugins enable rabbitmq_management
            systemctl restart rabbitmq-server
            rabbitmqctl add_user admin $admin_password
            rabbitmqctl set_user_tags admin administrator
            rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"
            systemctl enable rabbitmq-server

            curl -X PUT -H "Content-Type: application/json" --connect-timeout 10 --data "{\"deployStatus\": \"DEPLOY_COMPLETE\"}" $api_end_point/vm_catalog/external/$project_id/deploy/$stack_name/$stack_id/status
            echo "rabbitmq setting end"

  server:
    type: OS::Nova::Server
    properties:
      name: { list_join: ['-', [ get_param: 'OS::stack_name', 'rabbitmq-server' ]] }
      flavor: { get_param: flavor }
#      image: { get_param: image }
      block_device_mapping_v2:
         - image: { get_param: image }
           delete_on_termination: true
           volume_size: { get_param: flavor_volume_size }
           boot_index: 0
      availability_zone: { get_param: availability_zone }
      networks:
        - port: { get_resource: server_port }
      key_name: { get_param: key_name }
      user_data_update_policy: IGNORE
      user_data_format: RAW
      user_data:
        get_resource: init_config

outputs:
  servers:
    value:
      - instance: { get_attr: [ server, show ] }
        instancePort: { get_attr: [ server_port, show ] }
        amqpPort: { get_param: amqp_port }
        managementPort: { get_param: management_port }
